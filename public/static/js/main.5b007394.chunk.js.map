{"version":3,"sources":["Services/httpService.js","Services/chatService.js","Reducers/userReducer.js","store.js","Reducers/chatMessagesReducer.js","Reducers/workSpackReducer.js","Services/authService.js","Services/userService.js","Actions/userAction.js","Components/AuthCmps/LoginForm/LoginForm.jsx","Components/AuthCmps/SignupForm/SignupForm.jsx","Components/MainAppSideNav/MainAppSideNav.jsx","Pages/LoginPage/LoginPage.jsx","Pages/NotFoundPage/NotFoundPage.jsx","Services/socketService.js","Actions/chatMessagesAction.js","Services/workSpaceService.js","Actions/workSpaceAction.js","Components/GeneralStructure/PopupWindow/PopupWindow.jsx","Components/UserSideSettings/UserSideSettings.jsx","Components/AppHeader/AppHeader.jsx","Components/DropDown/DropDown.jsx","Components/CreateChannel/CreateChannel.jsx","Components/GeneralStructure/InputBox/InputBox.jsx","Components/SelectMembers/SelectMembers.jsx","Components/CreatePrivateMsgChat/CreatePrivateMsgChat.jsx","Components/SideNav/SideNav.jsx","Components/UserPreviewPopup/UserPreviewPopup.jsx","Components/ReactionsList/ReactionsList.jsx","Components/MessagePopNavActions/MessagePopNavActions.jsx","Components/Message/Message.jsx","Components/TextMsgEditor/TextMsgEditor.jsx","Components/SendMessageBar/SendMessageBar.jsx","Components/AddMemberToChannel/AddMemberToChannel.jsx","Components/ChannelMembersList/ChannelMembersList.jsx","Components/ChatTopBar/ChatTopBar.jsx","Components/UserTypingBox/UserTypingBox.jsx","Components/SideChatNavItem/SideChatNavItem.jsx","Components/SideChatAboutChannel/SideChatAboutChannel.jsx","Components/SideChatAboutUser/SideChatAboutUser.jsx","Components/SideChatMembersList/SideChatMembersList.jsx","Components/SideChatPinnedItems/SideChatPinnedItems.jsx","Components/ChatSideNav/ChatSideNav.jsx","Components/ChatFirstMsg/ChatFirstMsg.jsx","Components/UserFullProfileSideMenu/UserFullProfileSideMenu.jsx","Components/SideMessageThread/SideMessageThread.jsx","Pages/Chat/Chat.jsx","Components/LoadingScreen/LoadingScreen.jsx","ParrotApp.js","App.js","serviceWorker.js","index.js"],"names":["axios","Axios","create","withCredentials","httpService","get","endpoint","data","ajax","delete","put","post","method","a","url","res","console","log","type","_id","chatData","channel","id","chatService","getChatData","updatePublicChatData","updatePrivateChatData","createNewChannel","removeChannel","INITIAL_STATE","isAuth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","chatMessagesReducer","state","action","messages","message","sharedUsers","members","filter","member","map","msg","msgId","isPinned","currEmoji","reactions","reaction","replies","push","reply","userReducer","userData","channels","directMessages","pmData","c","channelId","p","workSpaceReducer","workSpaceData","onlineUsers","users","user","store","createStore","applyMiddleware","thunk","credentials","authService","login","authUserToken","signup","userService","updateUser","getUserById","_setLoggedUser","_updateUser","_addChannel","_addPrivateMsgChat","addPMToUser","dispatch","getState","mapDispatchToProps","checkCredentials","LoginForm","connect","loginHandler","useState","email","password","setCredentials","handleChange","target","toValue","value","className","placeholder","onChange","onClick","addNewUser","err","sucsses","SignupForm","signupSucsses","setSignupSucsses","verifyPassword","newUser","setNewUser","errorInfo","setErrorInfo","status","to","MainAppSideNav","LoginPage","showSignUpForm","setShowSignUpForm","sucssesLogin","setSucssesLogin","NotFoundPage","socket","io","socketService","on","eventName","cb","emit","require","_addMessage","_updateChat","_addMembers","_removeMember","_removeChannel","_removeMsg","_setPinnedStatus","_addReaction","_addReplay","toggleMsgPinnedStatus","isPrivate","updatedData","workSpaceId","workSpaceService","getWorkSpaceData","updateUserInWorkspace","_setWorkSpaceUsersStatus","PopupWindow","children","close","title","width","height","style","userUpdateInWP","userNewPrefs","wpId","UserSideSettings","currUser","setCurrUser","preferences","updateSettings","nickName","avatarImg","src","alt","AppHeader","loggedUser","useSelector","sideSettingIsOpen","setsideSettingIsOpen","Avatar","variant","data-name","DropDown","items","label","itemIcon","itemName","closeNavMobile","openDropDown","setOpenDropDown","createModalOpen","setCreateModalOpen","updateChatToRender","useContext","ChatContext","useEffect","React","Children","child","cloneElement","htmlFor","isOnline","includes","item","key","ev","document","querySelectorAll","forEach","classList","remove","add","itemSelect","addChannelToUser","channelName","newChannel","CreateChannel","channelDesc","channelThumbnail","createdAt","Date","now","createdBy","setChannel","prevState","finalChannel","finalizeChannelCreation","creator","autoComplete","InputBox","handler","SelectMembers","whenClicked","customStyle","showJoinStatus","filterBy","setFilterBy","chatMembers","loggedUserId","isJoined","some","chatMember","toLowerCase","CreatePrivateMsgChat","createdDirectMsgs","addNewPMChat","newPMData","directMsgName","SideNav","workSpace","isOpenOnMobile","setOpenSideNavOnMobile","name","UserPreviewPopup","userId","clickPos","userToShow","find","setFullProfile","FullProfileContext","userName","currTime","toLocaleTimeString","top","y","left","x","CircularProgress","ReactionsList","addReaction","elReactions","useRef","addEventListener","handleClickOutside","removeEventListener","current","contains","ref","autoFocus","emojis","emoji","idx","removeMsgFromChat","addReactionToMsg","MessagePopNavActions","props","openReactions","setOpenReactions","shortForm","replay","Message","isThread","shortNavForm","sentBy","messageTxt","showUserPopup","setShowUserPopup","isMsgHovered","setIsMsgHovered","setClickPos","onMouseEnter","onMouseLeave","clientX","clientY","innerWidth","innerHeight","moment","fromNow","parse","Object","entries","count","length","AvatarGroup","max","spacing","includedAvatars","reduce","avatars","repliesAvatars","memberReply","slice","TextMsgEditor","sendMessage","isReply","elTxtEditor","reactionsPanelIsOpen","setReactionsPanelIsOpen","cursorLocation","setCursorLocation","onSendMessage","shiftKey","innerText","onInput","txt","replace","onKeyPress","onKeyDown","getSelection","anchorOffset","onSelect","contentEditable","data-placeholder","substring","_SendMessageBar","msgToSend","typingTimer","emitSocketEvents","setState","chatType","uuidv4","replyMsgId","addReplyToMsg","sendPrivateMessage","sendPublicMessage","clearTimeout","setTimeout","this","Component","SendMessageBar","addNewMembers","AddMemberToChannel","toggleState","addUserToChannel","ChannelMembersList","clickedUserId","setUserId","popUpTitle","removeMember","stopPropagation","onNameClicked","ChatTopBar","toggleDetails","channelMembers","toggleNavBar","addMemberWindowState","setAddMemberWindowState","channelMembersWindow","setChannelMembersWindow","UserTypingBox","currTypingUser","setCurrTypingUser","SideChatNavItem","counter","itemIsOpen","setItemIsOpen","SideChatAboutChannel","toLocaleDateString","SideChatAboutUser","SideChatMembersList","clickedUser","setClickedUser","SideChatPinnedItems","keys","removePrivateMessage","privateMsgId","ChatSideNav","chatName","closeSideNav","chatPreviewImage","pinnedItems","removeItem","ChatFirstMsg","UserFullProfileSideMenu","closeProfile","SideMessageThread","closeThread","setIsPrivate","createContext","Chat","navIsOpen","messagesContainerEl","setChatType","detailsSideNavOpen","setDetailsSideNavOpen","sideThreadMsg","setSideThreadMsg","fullProfileToShow","setContainerScroll","scrollTop","scrollHeight","toggleDetailsNav","Provider","LoadingScreen","updateChatData","setWorkSpaceData","dispath","checkForLoggedUser","auth","updateUsersStatus","updateUserData","error","lastChatId","setLastChatId","openSideNavOnMobile","lastUpdatedData","serverChatId","App","exact","path","component","ParrotApp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5b007394.chunk.js","sourcesContent":["import Axios from 'axios';\nconst axios = Axios.create({ withCredentials: true });\n\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/';\n\nexport const httpService= {\n\tget(endpoint, data) {\n\t\treturn ajax(endpoint, 'GET', data);\n\t},\n\tdelete(endpoint, data) {\n\t\treturn ajax(endpoint, 'DELETE', data);\n\t},\n\tput(endpoint, data) {\n\t\treturn ajax(endpoint, 'PUT', data);\n\t},\n\tpost(endpoint, data) {\n\t\treturn ajax(endpoint, 'POST', data);\n\t},\n};\n\nasync function ajax(endpoint, method, data = null) {\n\ttry {\n\t\tconst res = await axios({\n\t\t\turl: `${BASE_URL}${endpoint}`,\n\t\t\tmethod,\n\t\t\tdata,\n\t\t});\n\t\treturn res.data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n","import { httpService } from './httpService';\n\nasync function getChatData({ type, _id }) {\n\treturn httpService.get(`chat/${type === 'direct' ? 'direct/' + _id : _id}`);\n}\n\nasync function updatePublicChatData(chatData) {\n\treturn httpService.put(`chat/${chatData._id}`, chatData);\n}\nasync function updatePrivateChatData(chatData) {\n\treturn httpService.put(`chat/direct/${chatData._id}`, chatData);\n}\n\nasync function createNewChannel(channel) {\n\treturn httpService.post(`chat/create`, channel);\n}\n\nasync function removeChannel(id) {\n\tconsole.log('removind',id)\n\treturn httpService.delete(`chat/${id}`);\n}\n\nexport const chatService ={\n\tgetChatData,\n\tupdatePublicChatData,\n\tupdatePrivateChatData,\n\tcreateNewChannel,\n\tremoveChannel\n};\n","const INITIAL_STATE = {\n\tisAuth: 'Verifying',\n};\n\nexport function userReducer(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_LOGGED_USER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuth: true,\n\t\t\t\t...action.userData,\n\t\t\t};\n\t\tcase 'ADD_CHANNEL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchannels: [...state.channels, action.channel],\n\t\t\t};\n\t\tcase 'ADD_PRIVATE_CHAT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdirectMessages: [...state.directMessages, action.pmData],\n\t\t\t};\n\t\tcase 'REMOVE_CHANNEL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchannels: state.channels.filter((c) => c._id !== action.channelId),\n\t\t\t};\n\t\tcase 'REMOVE_PRIVATE_CHAT': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdirectMessages: state.directMessages.filter((p) => p._id !== action.id),\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { chatMessagesReducer } from './Reducers/chatMessagesReducer';\nimport { userReducer } from './Reducers/userReducer';\nimport { workSpaceReducer } from './Reducers/workSpackReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n\tchatMessagesReducer,\n\tuserReducer,\n\tworkSpaceReducer,\n});\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n","const INITIAL_STATE = null;\n\nexport function chatMessagesReducer(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_CHAT_DATA':\n\t\t\treturn {\n\t\t\t\t...action.chatData,\n\t\t\t};\n\t\tcase 'ADD_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, action.message],\n\t\t\t};\n\t\tcase 'CREATE_CHANNEL':\n\t\t\treturn {\n\t\t\t\t...action.channel,\n\t\t\t};\n\t\tcase 'ADD_NEW_MEMBERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsharedUsers: [...state.sharedUsers, action.members],\n\t\t\t};\n\t\tcase 'REMOVE_MEMBER_FROM_CHANNEL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsharedUsers: state.sharedUsers.filter((member) => member._id !== action.member._id),\n\t\t\t};\n\t\tcase 'TOGGLE_PINNED':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: state.messages.map((msg) =>\n\t\t\t\t\tmsg.id !== action.msgId ? msg : { ...msg, isPinned: !msg.isPinned }\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'REMOVE_MSG':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: state.messages.filter((msg) => msg.id !== action.msgId),\n\t\t\t};\n\t\tcase 'ADD_REACTION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: state.messages.map((msg) => {\n\t\t\t\t\tif (msg.id === action.msgId) {\n\t\t\t\t\t\tlet currEmoji = msg.reactions[action.reaction];\n\t\t\t\t\t\tmsg.reactions[action.reaction] = currEmoji ? ++currEmoji : 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn msg;\n\t\t\t\t}),\n\t\t\t};\n\t\tcase 'ADD_REPLY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: state.messages.map((msg) => {\n\t\t\t\t\tif (msg.id === action.msgId) {\n\t\t\t\t\t\tmsg.replies.push(action.reply);\n\t\t\t\t\t}\n\t\t\t\t\treturn msg;\n\t\t\t\t}),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","const INITIAL_STATE = null;\n\nexport function workSpaceReducer(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_WORKSPACE_DATA':\n\t\t\treturn {\n\t\t\t\t...action.workSpaceData,\n\t\t\t};\n\t\tcase 'SET_USERS_STATUS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tonlineUsers: action.users,\n\t\t\t};\n\t\t}\n\t\tcase 'UPDATE_USER_SETTINGS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsharedUsers: state.sharedUsers.map((user) => {\n\t\t\t\t\tif (user._id === action.user._id) {\n\t\t\t\t\t\treturn action.user;\n\t\t\t\t\t}\n\t\t\t\t\treturn user;\n\t\t\t\t}),\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { httpService } from './httpService';\n\nasync function login(credentials) {\n\treturn httpService.post(`auth/login`, credentials)\n\n}\n\nasync function authUserToken() {\n\treturn httpService.get(`auth/check-token`)\n}\n\nasync function signup(credentials) {\n\treturn httpService.post(`auth/signup`, credentials)\n}\n\nexport const authService = {\n\tlogin,\n\tauthUserToken,\n\tsignup\n};\n","import { httpService } from './httpService';\n\nasync function getUserById(id) {\n\treturn httpService.get(`user/${id}`);\n}\nasync function updateUser(user) {\n\treturn httpService.put(`user/${user._id}`, user);\n}\n\nexport const userService = {\n\tupdateUser,\n\tgetUserById,\n};\n","import { authService } from '../Services/authService';\nimport { userService } from '../Services/userService';\nimport { chatService } from '../Services/chatService';\n\nconst _setLoggedUser = (userData) => ({ type: 'SET_LOGGED_USER', userData });\nconst _updateUser = (user) => ({ type: 'UPDATE_USER', user });\nconst _addChannel = (channel) => ({ type: 'ADD_CHANNEL', channel });\nconst _addPrivateMsgChat = (pmData) => ({ type: 'ADD_PRIVATE_CHAT', pmData });\nconst _removePrivateMsg = (id) => ({ type: 'REMOVE_PRIVATE_CHAT', id });\n\n// export function getUserById(userId) {\n// \treturn async (dispatch) => {\n// \t\ttry {\n// \t\t\tconst user = await authService.login({ userName: 'Asaf Cohen' });\n// \t\t\treturn user\n// \t\t} catch (error) {\n// \t\t\tconsole.log(error);\n// \t\t}\n// \t};\n// }\nexport function updateUserData(user) {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch(_setLoggedUser(user));\n\t\t} catch (error) {\n\t\t\tconsole.log(`problem updating user :`, user);\n\t\t}\n\t};\n}\nexport function updateUser(user) {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tawait userService.updateUser(user);\n\t\t\tdispatch(_updateUser(user));\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n}\n\nexport function removePrivateMessage(privateMsgId) {\n\treturn async (dispatch, getState) => {\n\t\tdispatch(_removePrivateMsg(privateMsgId));\n\t\tawait userService.updateUser(getState().userReducer);\n\t};\n}\n\nexport function addChannelToUser(channel) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tconst { _id, channelName } = await chatService.createNewChannel(channel);\n\t\t\tlet newChannel = { _id, channelName };\n\t\t\tawait dispatch(_addChannel(newChannel));\n\t\t\tawait userService.updateUser(getState().userReducer);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function addPMToUser(pmData) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tawait dispatch(_addPrivateMsgChat(pmData));\n\t\t\tawait userService.updateUser(getState().userReducer);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function addNewUser(credentials) {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst data = await authService.signup(credentials);\n\t\t\tconst { err, user } = data;\n\t\t\tconsole.log('err', err, 'user', user);\n\t\t\tif (err) return { err, sucsses: false };\n\t\t\tdispatch(_setLoggedUser(user));\n\t\t\treturn { user, sucsses: true };\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n}\n\nexport function checkCredentials(credentials) {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst data = await authService.login(credentials);\n\t\t\tdispatch(_setLoggedUser(data));\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n}\n\nexport function checkForLoggedUser() {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst auth = await authService.authUserToken();\n\t\t\tif (auth.user) dispatch(_setLoggedUser(auth.user));\n\t\t\telse dispatch(_setLoggedUser({ isAuth: false }));\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n","import React, { useState } from 'react';\nimport './LoginForm.scss';\nimport { checkCredentials } from '../../../Actions/userAction';\nimport { connect } from 'react-redux';\n\nfunction _LoginForm({ loginHandler, checkCredentials }) {\n\tconst [credentials, setCredentials] = useState({\n\t\temail: 'ravit@gmail.com',\n\t\tpassword: '1234',\n\t});\n\tconst handleChange = ({ target }) => {\n\t\tconst toValue = target.id;\n\t\tsetCredentials((state) => ({ ...state, [toValue]: target.value }));\n\t};\n\n\tconst login = async () => {\n\t\tconst userData = await checkCredentials(credentials);\n\t\tconsole.log(userData);\n\t\tif (userData) loginHandler(true);\n\t};\n\n\treturn (\n\t\t<div className='right-side-login flex col'>\n\t\t\t<section className='login-form flex col'>\n\t\t\t\t<h3 className='form-title'>Log In</h3>\n\t\t\t\t<label className='flex align-center'>\n\t\t\t\t\t<i className='form-icon fas fa-at' />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={credentials.email}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label className='flex align-center'>\n\t\t\t\t\t<i className='form-icon fas fa-lock' />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={credentials.password}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<button onClick={login} className='login-btn'>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = {\n\tcheckCredentials,\n};\n\nexport const LoginForm = connect(null, mapDispatchToProps)(_LoginForm);\n","import React, { useState } from 'react';\nimport './SignupForm.scss';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { addNewUser } from '../../../Actions/userAction';\n\nfunction _SignupForm({ addNewUser }) {\n\tconst [signupSucsses, setSignupSucsses] = useState(false);\n\tconst [newUser, setNewUser] = useState({\n\t\temail: 'ravit@gmail.com',\n\t\tpassword: '1234',\n\t\tverifyPassword: '1234',\n\t});\n\tconst [errorInfo, setErrorInfo] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t\tverifyPassword: '',\n\t});\n\n\tconst handleChange = ({ target }) => {\n\t\tconst toValue = target.id;\n\t\tsetNewUser((state) => ({ ...state, [toValue]: target.value }));\n\t};\n\n\tconst signup = async () => {\n\t\tif (newUser.password !== newUser.verifyPassword) {\n\t\t\tsetErrorInfo((state) => ({ ...state, verifyPassword: 'passwords dont match' }));\n\t\t}\n\t\tconst { email, password } = newUser;\n\t\tconst status = await addNewUser({ email, password });\n\t\tif (status.err) {\n\t\t\tsetErrorInfo((state) => ({ ...state, email: status.err }));\n\t\t\treturn;\n\t\t}\n\t\tsetSignupSucsses(true);\n\t};\n\n\treturn (\n\t\t<section className='right-side-signup flex col'>\n\t\t\t<section className='signup-form flex col'>\n\t\t\t\t<h3 className='form-title'>Sign Up</h3>\n\t\t\t\t<label className='flex align-center'>\n\t\t\t\t\t<i className='form-icon fas fa-at' />\n\t\t\t\t\t<input id='email' type='text' placeholder='Email' onChange={handleChange} value={newUser.email} />\n\t\t\t\t\t<h6 className='err-label'>{errorInfo.email}</h6>\n\t\t\t\t</label>\n\t\t\t\t<label className='flex align-center'>\n\t\t\t\t\t<i className='form-icon fas fa-lock' />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={newUser.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<h6 className='err-label'>{errorInfo.password}</h6>\n\t\t\t\t</label>\n\t\t\t\t<label className='flex align-center'>\n\t\t\t\t\t<i className='form-icon fas fa-lock' />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='verifyPassword'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tplaceholder='Repeat password'\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tvalue={newUser.verifyPassword}\n\t\t\t\t\t/>\n\t\t\t\t\t<h6 className='err-label'>{errorInfo.verifyPassword}</h6>\n\t\t\t\t</label>\n\t\t\t\t<button onClick={signup} className='signup-btn'>\n\t\t\t\t\tSign up\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t\t{signupSucsses && <Redirect to='/' />}\n\t\t</section>\n\t);\n}\n\nconst mapDispatchToProps = {\n\taddNewUser,\n};\n\nexport const SignupForm = connect(null, mapDispatchToProps)(_SignupForm);\n","import React from 'react';\nimport './MainAppSideNav.scss';\nexport function MainAppSideNav() {\n\treturn (\n\t\t<div className='main-nav flex col'>\n\t\t\t<i className='fas fa-home'></i>\n\t\t\t<i className='fab fa-rocketchat'></i>\n\t\t\t<i className='fas fa-database'></i>\n\t\t\t<i className='fas fa-sitemap'></i>\n\t\t\t<i className='far fa-address-card'></i>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport './LoginPage.scss';\nimport { Redirect } from 'react-router-dom';\nimport { LoginForm } from '../../Components/AuthCmps/LoginForm/LoginForm';\nimport { SignupForm } from '../../Components/AuthCmps/SignupForm/SignupForm';\nimport { MainAppSideNav } from '../../Components/MainAppSideNav/MainAppSideNav';\n\nexport function LoginPage() {\n\tconst [showSignUpForm, setShowSignUpForm] = useState(false);\n\tconst [sucssesLogin, setSucssesLogin] = useState(false);\n\n\tconst toggleForm = () => {\n\t\tsetShowSignUpForm(!showSignUpForm);\n\t\tconsole.log(showSignUpForm);\n\t};\n\treturn (\n\t\t<div className='login-page flex'>\n\t\t\t<MainAppSideNav />\n\t\t\t<section className='left-side flex'>\n\t\t\t\t<h3 className='logo'>Parrot</h3>\n\t\t\t</section>\n\t\t\t<section className={'right-side flex col ' + (showSignUpForm ? 'show-signup' : '')}>\n\t\t\t\t<LoginForm loginHandler={setSucssesLogin} />\n\t\t\t\t<section className='toggle-forms-btn' onClick={toggleForm}>\n\t\t\t\t\t<span>Sign Up</span>\n\t\t\t\t\t<span>Log In</span>\n\t\t\t\t</section>\n\t\t\t\t<SignupForm />\n\t\t\t</section>\n\t\t\t{sucssesLogin && <Redirect to='/' />}\n\t\t</div>\n\t);\n}\n","import React from 'react'\nimport './NotFoundPage.scss'\nexport  function NotFoundPage() {\n    return (\n        <div>\n            <h1>not found!</h1>\n        </div>\n    )\n}\n","import io from 'socket.io-client';\n\nconst ENDPOINT = process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\nconst socket = io(ENDPOINT);\n\nfunction on(eventName, cb) {\n\tsocket.on(eventName, cb);\n}\n\nfunction emit(eventName, data, cb) {\n\tsocket.emit(eventName, data, cb);\n}\n\nexport const socketService = {\n\ton,\n\temit,\n};\n","const { chatService } = require('../Services/chatService');\n\n//DISPATCH FUNCTIONS\n\nconst _addMessage = (message) => ({ type: 'ADD_MESSAGE', message });\nconst _updateChat = (chatData) => ({ type: 'SET_CHAT_DATA', chatData });\nconst _addMembers = (members) => ({ type: 'ADD_NEW_MEMBERS', members });\nconst _removeMember = (member) => ({ type: 'REMOVE_MEMBER_FROM_CHANNEL', member });\nconst _removeChannel = (channelId) => ({ type: 'REMOVE_CHANNEL', channelId });\nconst _removeMsg = (msgId) => ({ type: 'REMOVE_MSG', msgId });\nconst _setPinnedStatus = (msgId) => ({ type: 'TOGGLE_PINNED', msgId });\nconst _addReaction = (msgId, reaction) => ({ type: 'ADD_REACTION', msgId, reaction });\nconst _addReplay = (msgId, reply) => ({ type: 'ADD_REPLY', msgId, reply });\n\n//EXPORTED ACTIONS\n\nexport function getChatData(chatData) {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst data = await chatService.getChatData(chatData);\n\t\t\tdispatch(_updateChat(data));\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n//!can merge this with the next function and add isPrivate...\nexport function sendPublicMessage(message) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tdispatch(_addMessage(message));\n\t\t\tlet updatedData = getState().chatMessagesReducer;\n\t\t\tawait chatService.updatePublicChatData(updatedData);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n}\nexport function sendPrivateMessage(message) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tdispatch(_addMessage(message));\n\t\t\tawait chatService.updatePrivateChatData(getState().chatMessagesReducer);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n}\n\nexport function updateChatData(chatData) {\n\treturn async (dispatch) => {\n\t\tawait dispatch(_updateChat(chatData));\n\t};\n}\nexport function removeMsgFromChat(msgId, isPrivate) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tdispatch(_removeMsg(msgId));\n\t\t\tlet updatedData = getState().chatMessagesReducer;\n\t\t\tif (isPrivate) await chatService.updatePrivateChatData(updatedData);\n\t\t\telse await chatService.updatePublicChatData(updatedData);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function addReactionToMsg(msgId, reaction, isPrivate) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tdispatch(_addReaction(msgId, reaction));\n\t\t\tlet updatedData = getState().chatMessagesReducer;\n\t\t\tif (isPrivate) await chatService.updatePrivateChatData(updatedData);\n\t\t\telse await chatService.updatePublicChatData(updatedData);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function addReplyToMsg(msgId, reply, isPrivate) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tdispatch(_addReplay(msgId, reply));\n\t\t\tlet updatedData = getState().chatMessagesReducer;\n\t\t\tif (isPrivate) await chatService.updatePrivateChatData(updatedData);\n\t\t\telse await chatService.updatePublicChatData(updatedData);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function toggleMsgPinnedStatus(msgId, isPrivate) {\n\treturn async (dispatch, getState) => {\n\t\ttry {\n\t\t\tdispatch(_setPinnedStatus(msgId));\n\t\t\tlet updatedData = getState().chatMessagesReducer;\n\t\t\tif (isPrivate) await chatService.updatePrivateChatData(updatedData);\n\t\t\telse await chatService.updatePublicChatData(updatedData);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function addNewMembers(members) {\n\treturn async (dispatch, getState) => {\n\t\tdispatch(_addMembers(members));\n\t\tawait chatService.updatePublicChatData(getState().chatMessagesReducer);\n\t};\n}\n\nexport function removeMemberFromChannel(member) {\n\treturn async (dispatch, getState) => {\n\t\tdispatch(_removeMember(member));\n\t\tawait chatService.updatePublicChatData(getState().chatMessagesReducer);\n\t};\n}\n\nexport function removeChannel(channelId) {\n\treturn async (dispatch) => {\n\t\tawait chatService.removeChannel(channelId);\n\t\tdispatch(_removeChannel(channelId));\n\t};\n}\n\n\n","import { httpService } from './httpService';\n\nasync function getWorkSpaceData(id) {\n\treturn httpService.get(`workspace/${id}`);\n}\n\nasync function updateUserInWorkspace(workSpaceId, userData) {\n\treturn httpService.put(`workspace/update/${workSpaceId}`, userData);\n}\n\nexport const workSpaceService = {\n\tgetWorkSpaceData,\n\tupdateUserInWorkspace\n};\n","import { workSpaceService } from '../Services/workSpaceService';\n\nconst _setWorkSpaceData = (workSpaceData) => ({ type: 'SET_WORKSPACE_DATA', workSpaceData });\nconst _setWorkSpaceUsersStatus = (users) => ({ type: 'SET_USERS_STATUS', users });\nconst _userUpdateInWorkspace = (user) => ({ type: 'UPDATE_USER_SETTINGS', user });\n\nexport function setWorkSpaceData(id) {\n\treturn async (dispath) => {\n\t\ttry {\n\t\t\tconst data = await workSpaceService.getWorkSpaceData(id);\n\t\t\tdispath(_setWorkSpaceData(data));\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n}\n\nexport function updateUsersStatus(users) {\n\treturn async (dispatch) => {\n\t\tdispatch(_setWorkSpaceUsersStatus(users));\n\t};\n}\n\nexport function updateWorkspaceUserData(userNewPrefs) {\n\treturn async (dispatch, getState) => {\n\t\tconst wpId = getState().workSpaceReducer._id;\n\t\tawait workSpaceService.updateUserInWorkspace(wpId, userNewPrefs);\n\t\tdispatch(_userUpdateInWorkspace(userNewPrefs));\n\t};\n}\n","import React from 'react';\nimport './PopupWindow.scss';\nexport function PopupWindow({ children, close, title, width, height }) {\n\treturn (\n\t\t<div className='popup-window'>\n\t\t\t<section className='close-modal-screen' onClick={() => close(false)} />\n\t\t\t<section className='popup-box flex col' style={{ '--width': width, '--height': height }}>\n\t\t\t\t<header className='flex space-between align-center'>\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t\t<i className='far fa-times-circle' onClick={() => close(false)}></i>\n\t\t\t\t</header>\n\t\t\t\t{children}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport './UserSideSettings.scss';\nimport { PopupWindow } from '../GeneralStructure/PopupWindow/PopupWindow';\nimport { updateUser } from '../../Actions/userAction';\nimport { updateWorkspaceUserData } from '../../Actions/workSpaceAction';\nimport { connect } from 'react-redux';\n\nfunction _UserSideSettings({ close, user, updateUser, userUpdateInWP }) {\n\tconsole.log(user);\n\tconst [currUser, setCurrUser] = useState(user);\n\tconst handleChange = ({ target }) => {\n\t\tsetCurrUser((state) => ({ ...state, preferences: { ...state.preferences, [target.id]: target.value } }));\n\t};\n\tconst updateSettings = async () => {\n\t\tconst { nickName, avatarImg } = currUser.preferences;\n\t\tawait updateUser(currUser);\n\t\tawait userUpdateInWP({ _id: currUser._id, nickName, avatarImg });\n\t\tclose(false);\n\t};\n\treturn (\n\t\t<PopupWindow close={close} title='Your Settings' width='550px' height='400px'>\n\t\t\t<div className='user-settings'>\n\t\t\t\t<section className='user-data-inputs'>\n\t\t\t\t\t<input type='text' placeholder='Full Name' />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='nickName'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Nickname '\n\t\t\t\t\t\tvalue={currUser.preferences.nickName}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input type='text' placeholder='What i do' />\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='avatarImg'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Profile image url'\n\t\t\t\t\t\tvalue={currUser.preferences.avatarImg}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t\t<img src={currUser.preferences.avatarImg} alt='Profile pic' />\n\t\t\t</div>\n\t\t\t<button className='btn-save' onClick={updateSettings}>\n\t\t\t\tSave\n\t\t\t</button>\n\t\t</PopupWindow>\n\t);\n}\n\nconst mapDispatchToProps = {\n\tupdateUser,\n\tuserUpdateInWP: updateWorkspaceUserData,\n};\n\nexport const UserSideSettings = connect(null, mapDispatchToProps)(_UserSideSettings);\n","import React, { useState } from 'react';\nimport './AppHeader.scss';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useSelector } from 'react-redux';\nimport { UserSideSettings } from '../UserSideSettings/UserSideSettings';\n\nexport function AppHeader() {\n\tconst loggedUser = useSelector((state) => state.userReducer);\n\tconst [sideSettingIsOpen, setsideSettingIsOpen] = useState(false);\n\treturn (\n\t\t<div className='app-header flex-center'>\n\t\t\t<input className=\"main-search-bar\" type='text' placeholder='Search In Parrot...' />\n\t\t\t{loggedUser.isAuth && (\n\t\t\t\t<Avatar\n\t\t\t\t\tclassName='avatar'\n\t\t\t\t\tvariant='square'\n\t\t\t\t\talt={loggedUser.preferences.nickName}\n\t\t\t\t\tsrc={loggedUser.preferences.avatarImg}\n\t\t\t\t\tdata-name={loggedUser.preferences.nickName}\n\t\t\t\t\tonClick={() => setsideSettingIsOpen(!sideSettingIsOpen)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<span className='profile-tag flex-center'>{loggedUser.preferences.nickName}</span>\n\t\t\t{sideSettingIsOpen && <UserSideSettings close={setsideSettingIsOpen} user={loggedUser} />}\n\t\t</div>\n\t);\n}\n","import React, { useContext, useState, useEffect } from 'react';\nimport './DropDown.scss';\nimport { useSelector } from 'react-redux';\nimport { ChatContext } from '../../ParrotApp';\n\nexport function DropDown({ items, label, itemIcon, itemName, children, closeNavMobile }) {\n\tconst [openDropDown, setOpenDropDown] = useState(true);\n\tconst [createModalOpen, setCreateModalOpen] = useState(false);\n\tconst { updateChatToRender } = useContext(ChatContext);\n\tconst { onlineUsers } = useSelector((state) => state.workSpaceReducer);\n\tuseEffect(() => {\n\t\t//to load the first channel/private when refreshed\n\t\tif (items[0] && !items[0].type) updateChatToRender({ _id: items[0]._id });\n\t}, []);\n\tconst getFormattedData = () => {\n\t\t//!think of a better way to implement this!\n\t\tif (itemName === 'directMsgName') {\n\t\t\titems = items.map((user) => ({ ...user, isOnline: onlineUsers.includes(user._id) }));\n\t\t}\n\t\treturn items;\n\t};\n\tconst itemSelect = ({ target }, item) => {\n\t\tconst dropDownItems = document.querySelectorAll('.drop-item');\n\t\tdropDownItems.forEach((item) => item.classList.remove('selected'));\n\t\ttarget.classList.add('selected');\n\t\tcloseNavMobile(false);\n\t\tupdateChatToRender(item);\n\t};\n\treturn (\n\t\t<ul className='dropdown-container clean-list'>\n\t\t\t{createModalOpen &&\n\t\t\t\tReact.Children.map(children, (child) => {\n\t\t\t\t\treturn React.cloneElement(child, { close: setCreateModalOpen });\n\t\t\t\t})}\n\t\t\t<section className='drop-down-header flex'>\n\t\t\t\t<i\n\t\t\t\t\tid='channel-tag'\n\t\t\t\t\tclassName={'fas fa-caret-right' + (openDropDown ? ' open' : '')}\n\t\t\t\t\tonClick={() => setOpenDropDown(!openDropDown)}\n\t\t\t\t></i>\n\t\t\t\t<span onClick={() => setOpenDropDown(!openDropDown)} htmlFor='channel-tag'>\n\t\t\t\t\t{label}\n\t\t\t\t</span>\n\t\t\t\t<i className='fas fa-plus' onClick={() => setCreateModalOpen(true)} />\n\t\t\t</section>\n\t\t\t{openDropDown &&\n\t\t\t\tonlineUsers &&\n\t\t\t\tgetFormattedData().map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName='drop-item'\n\t\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\t\tonClick={(ev) => itemSelect(ev, { type: item.type, _id: item._id })}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i className={itemIcon + (item.isOnline ? ' online' : '')}></i>\n\t\t\t\t\t\t\t{item[itemName]}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</ul>\n\t);\n}\n","import React, { useState } from 'react';\nimport './CreateChannel.scss';\nimport { addChannelToUser } from '../../Actions/userAction';\nimport { connect } from 'react-redux';\nimport { PopupWindow } from '../GeneralStructure/PopupWindow/PopupWindow';\n\nfunction _CreateChannel({ close, addChannelToUser, userData }) {\n\tconst [channel, setChannel] = useState({\n\t\tchannelName: '',\n\t\tchannelDesc: '',\n\t\tchannelThumbnail:\n\t\t\t'https://d2slcw3kip6qmk.cloudfront.net/marketing/techblog/how-to-plan-a-programming-competition-header@2x.png',\n\t\tcreatedAt: Date.now(),\n\t\tcreatedBy: { ...userData.preferences, _id: userData._id },\n\t\tmessages: [],\n\t});\n\n\tconst handleChange = ({ target }) => {\n\t\tconst { value } = target;\n\t\tsetChannel((prevState) => ({ ...prevState, [target.id]: value }));\n\t};\n\tconst createNewChannel = async () => {\n\t\tif (!channel.channelName) return;\n\t\tclose(false);\n\t\tlet finalChannel = finalizeChannelCreation(channel);\n\t\taddChannelToUser(finalChannel);\n\t};\n\tconst finalizeChannelCreation = () => {\n\t\tconst creator = {\n\t\t\tnickName: userData.preferences.nickName,\n\t\t\tavatarImg: userData.preferences.avatarImg,\n\t\t\t_id: userData._id,\n\t\t};\n\t\treturn { ...channel, sharedUsers: [creator] };\n\t};\n\n\treturn (\n\t\t<div className='create-channel'>\n\t\t\t<PopupWindow close={close} title='Create New Channel' width='500px' height='500px'>\n\t\t\t\t<p>\n\t\t\t\t\tChannels are the place where you can group togther your frindes and share your thoughts with each\n\t\t\t\t\tother.. Try to give it a unique name around a topic - #Homework for example..\n\t\t\t\t</p>\n\t\t\t\t<label htmlFor='channelName'>Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='# Channel Name'\n\t\t\t\t\tid='channelName'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\t\t\t\t<label htmlFor='channelDesc'>Description (optimal)</label>\n\t\t\t\t<input type='text' id='channelDesc' onChange={handleChange} />\n\t\t\t\t<button className={'btn-create' + (channel.channelName ? ' sucsses' : '')} onClick={createNewChannel}>\n\t\t\t\t\tCreate\n\t\t\t\t</button>\n\t\t\t</PopupWindow>\n\t\t\t{/* <section className='close-modal-screen' onClick={() => close()} /> */}\n\t\t</div>\n\t);\n}\nconst mapStateToProps = (state) => ({\n\tuserData: state.userReducer,\n});\n\nconst mapDispatchToProps = {\n\taddChannelToUser,\n};\n\nexport const CreateChannel = connect(mapStateToProps, mapDispatchToProps)(_CreateChannel);\n","import React from 'react';\nimport './InputBox.scss';\n\nexport function InputBox({ placeholder, handler, value, height, width }) {\n\treturn (\n\t\t<div className='input-box'>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(ev) => handler(ev.target.value)}\n\t\t\t\tstyle={{ width, height }}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport './SelectMembers.scss';\nimport { useSelector } from 'react-redux';\nimport { InputBox } from '../GeneralStructure/InputBox/InputBox';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport function SelectMembers({ whenClicked, customStyle, showJoinStatus }) {\n\tvar { sharedUsers } = useSelector((state) => state.workSpaceReducer); //FOR THE GENERAL MEMBERS OF THE WORKSPACE\n\tconst [filterBy, setFilterBy] = useState('');\n\tconst chatMembers = useSelector((state) =>\n\t\tshowJoinStatus ? state.chatMessagesReducer.sharedUsers : state.userReducer.directMessages\n\t);\n\tconst loggedUserId = useSelector((state) => state.userReducer._id);\n\n\t// const usersDataWithStatus =\n\t// sharedUsers.map((wpSharedUser) => {\n\t// \tlet joinedMembersIds = chatMembers.map((user) => user._id);\n\t// \tif (wpSharedUser._id !== loggedUserId) {\n\t// \t\twpSharedUser.isJoined = joinedMembersIds.includes(wpSharedUser._id);\n\t// \t}\n\t// \treturn wpSharedUser;\n\t// })\n\tconst filteredUsers = () => {\n\t\tsharedUsers.forEach((user) => {\n\t\t\tuser.isJoined = chatMembers.some((chatMember) => chatMember._id === user._id);\n\t\t});\n\n\t\treturn sharedUsers.filter((member) => {\n\t\t\treturn member.nickName.toLowerCase().includes(filterBy.toLowerCase()) && member._id !== loggedUserId;\n\t\t});\n\t};\n\tconst handleChange = (value) => {\n\t\tsetFilterBy(value);\n\t};\n\treturn (\n\t\t<div className='select-members-container flex col'>\n\t\t\t<InputBox placeholder='Search In Members' handler={handleChange} value={filterBy} />\n\t\t\t<div className={customStyle ? customStyle : 'user-container-default'}>\n\t\t\t\t{sharedUsers &&\n\t\t\t\t\tfilteredUsers().map((user) => (\n\t\t\t\t\t\t<section\n\t\t\t\t\t\t\tclassName={'user-preview flex' + (user.isJoined ? ' disable' : '')}\n\t\t\t\t\t\t\tkey={user._id}\n\t\t\t\t\t\t\tonClick={() => whenClicked(user)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Avatar variant='square' src={user.avatarImg} />\n\t\t\t\t\t\t\t<span>{user.nickName}</span>\n\t\t\t\t\t\t\t{showJoinStatus && (\n\t\t\t\t\t\t\t\t<span className='user-status'>{user.isJoined ? 'Already in this channel' : ''}</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { useContext } from 'react';\nimport './CreatePrivateMsgChat.scss';\nimport { PopupWindow } from '../GeneralStructure/PopupWindow/PopupWindow';\nimport { SelectMembers } from '../SelectMembers/SelectMembers';\nimport { addPMToUser } from '../../Actions/userAction';\nimport { connect } from 'react-redux';\nimport { ChatContext } from '../../ParrotApp';\n\nfunction _CreatePrivateMsgChat({ close, addPMToUser, userData }) {\n\tconst createdDirectMsgs = userData.directMessages;\n\tconst { updateChatToRender } = useContext(ChatContext);\n\n\tconst addNewPMChat = async ({ _id, nickName, avatarImg }) => {\n\t\tif (!createdDirectMsgs.some((user) => user._id === _id)) {\n\t\t\tconst newPMData = { type: 'direct', _id, directMsgName: nickName, avatarImg, messages: [] };\n\t\t\tawait addPMToUser(newPMData);\n\t\t}\n\t\tupdateChatToRender({ type: 'direct', _id });\n\t\tclose(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<PopupWindow close={close} title='Send Direct Message'  width=\"500px\" height=\"500px\">\n\t\t\t\t<section className='overflow-hidden max-width flex col'>\n\t\t\t\t\t<SelectMembers whenClicked={addNewPMChat} />\n\t\t\t\t</section>\n\t\t\t</PopupWindow>\n\t\t</div>\n\t);\n}\nconst mapStateToProps = (state) => ({\n\tuserData: state.userReducer,\n});\n\nconst mapDispatchToProps = {\n\taddPMToUser,\n};\n\nexport const CreatePrivateMsgChat = connect(mapStateToProps, mapDispatchToProps)(_CreatePrivateMsgChat);\n","import React, { useContext } from 'react';\nimport './SideNav.scss';\nimport { DropDown } from '../DropDown/DropDown';\nimport { CreateChannel } from '../CreateChannel/CreateChannel';\nimport { CreatePrivateMsgChat } from '../CreatePrivateMsgChat/CreatePrivateMsgChat';\nimport { connect } from 'react-redux';\nimport {ChatContext} from '../../ParrotApp'\n\nfunction _SideNav({ userData, workSpace, isOpenOnMobile }) {\n\tconst { setOpenSideNavOnMobile } = useContext(ChatContext);\n\treturn (\n\t\t<div className={'side-nav flex col' + (isOpenOnMobile ? ' open' : '')}>\n\t\t\t<section className='workspace-name flex'>\n\t\t\t\t<span>{workSpace.name}</span>\n\t\t\t\t<i className='far fa-edit'></i>\n\t\t\t</section>\n\t\t\t{userData && (\n\t\t\t\t<DropDown\n\t\t\t\t\titems={userData.channels}\n\t\t\t\t\tlabel='Channels'\n\t\t\t\t\titemIcon='fab fa-slack-hash'\n\t\t\t\t\titemName='channelName'\n\t\t\t\t\tcloseNavMobile={setOpenSideNavOnMobile}\n\t\t\t\t>\n\t\t\t\t\t<CreateChannel />\n\t\t\t\t</DropDown>\n\t\t\t)}\n\t\t\t{userData && (\n\t\t\t\t<DropDown\n\t\t\t\t\titems={userData.directMessages}\n\t\t\t\t\tlabel='Direct Messages'\n\t\t\t\t\titemIcon='far fa-circle'\n\t\t\t\t\titemName='directMsgName'\n\t\t\t\t\tcloseNavMobile={setOpenSideNavOnMobile}\n\t\t\t\t>\n\t\t\t\t\t<CreatePrivateMsgChat />\n\t\t\t\t</DropDown>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tuserData: state.userReducer,\n});\n\nexport const SideNav = connect(mapStateToProps, null)(_SideNav);\n","import React, { useContext, useEffect } from 'react';\nimport './UserPreviewPopup.scss';\nimport { connect } from 'react-redux';\nimport { CircularProgress } from '@material-ui/core';\nimport { addPMToUser } from '../../Actions/userAction';\nimport { ChatContext } from '../../ParrotApp';\nimport { FullProfileContext } from '../../Pages/Chat/Chat';\n\nfunction _UserPreviewPopup({ workSpaceData, userData, addPMToUser, userId, close, clickPos }) {\n\tconst userToShow = workSpaceData.sharedUsers.find((user) => user._id === userId);\n\tconst createdDirectMsgs = userData.directMessages;\n\tconst { updateChatToRender } = useContext(ChatContext);\n\tconst setFullProfile = useContext(FullProfileContext);\n\n\tconst addNewPMChat = async () => {\n\t\tconst { _id, userName, avatarImg } = userToShow;\n\t\tif (!createdDirectMsgs.some((user) => user._id === _id)) {\n\t\t\tconst newPMData = { type: 'direct', _id, directMsgName: userName, avatarImg, messages: [] };\n\t\t\tawait addPMToUser(newPMData);\n\t\t}\n\t\tupdateChatToRender({ type: 'direct', _id });\n\t\tclose(false);\n\t};\n\tconst currTime = new Date().toLocaleTimeString();\n\tconst openFullProfile = () => {\n\t\tsetFullProfile(userToShow);\n\t\tclose(false);\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName='user-preview-popup-wrapper flex col'\n\t\t\tstyle={{ top: clickPos.y + 'px', left: clickPos.x + 'px' }}\n\t\t>\n\t\t\t<div className='close-screen' onClick={() => close(false)} />\n\t\t\t{userToShow && (\n\t\t\t\t<div className='preview-content flex col'>\n\t\t\t\t\t<img src={userToShow.avatarImg} alt='user-image' />\n\t\t\t\t\t<span className='username'>{userToShow.userName}</span>\n\t\t\t\t\t<span className='view-profile' onClick={openFullProfile}>\n\t\t\t\t\t\tView full profile\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span className='local-time'>\n\t\t\t\t\t\tLocal time:\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{currTime}\n\t\t\t\t\t</span>\n\t\t\t\t\t<button className='btn-pm-message' onClick={addNewPMChat}>\n\t\t\t\t\t\tMessage\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!userToShow && <CircularProgress />}\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tworkSpaceData: state.workSpaceReducer, //!i need that?\n\tuserData: state.userReducer,\n});\n\nconst mapDispatchToProps = {\n\taddPMToUser,\n};\n\nexport const UserPreviewPopup = connect(mapStateToProps, mapDispatchToProps)(_UserPreviewPopup);\n","import React, { useEffect, useRef } from 'react';\nimport './ReactionsList.scss';\nimport emojis from 'emojis-list';\n\nexport function ReactionsList({ addReaction, close }) {\n\tconst elReactions = useRef(null);\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousedown', handleClickOutside);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('mousedown', handleClickOutside);\n\t\t};\n\t});\n\tconst handleClickOutside = (ev) => {\n\t\tconsole.log(\"hi\")\n\t\tif (elReactions.current && !elReactions.current.contains(ev.target)) {\n\t\t\tclose(false);\n\t\t}\n\t};\n\treturn (\n\t\t<div className='reactions-wrapper flex col space-between' ref={elReactions}>\n\t\t\t<input className='search-input' type='text' placeholder='Search' autoFocus />\n\t\t\t<section className='reactions-container'>\n\t\t\t\t{emojis.map((emoji, idx) => (\n\t\t\t\t\t<span key={idx} onClick={() => addReaction(emoji)}>\n\t\t\t\t\t\t{emoji}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport './MessagePopNavActions.scss';\nimport { removeMsgFromChat, toggleMsgPinnedStatus, addReactionToMsg } from '../../Actions/chatMessagesAction';\nimport { ReactionsList } from '../ReactionsList/ReactionsList';\nimport { connect } from 'react-redux';\n\nfunction _MessagePopNavActions(props) {\n\tconst [openReactions, setOpenReactions] = useState(false);\n\tconst addReaction = async (reaction) => {\n\t\tawait props.addReactionToMsg(props.msg.id, reaction, props.isPrivate);\n\t};\n\treturn (\n\t\t!props.shortForm && (\n\t\t\t<div className='msg-pop-nav flex-center'>\n\t\t\t\t<i className='far fa-icons' onClick={() => setOpenReactions(!openReactions)}></i>\n\t\t\t\t<i className='fal fa-comment-alt-lines' onClick={() => props.replay(props.msg.id)}></i>\n\t\t\t\t<i\n\t\t\t\t\tclassName={'fal fa-thumbtack' + (props.msg.isPinned ? ' pinned' : '')}\n\t\t\t\t\tonClick={() => props.toggleMsgPinnedStatus(props.msg.id, props.isPrivate)}\n\t\t\t\t/>\n\t\t\t\t<i\n\t\t\t\t\tclassName='fas fa-eraser'\n\t\t\t\t\tonClick={() => props.removeMsgFromChat(props.msg.id, props.isPrivate)}\n\t\t\t\t></i>\n\t\t\t\t{openReactions && <ReactionsList addReaction={addReaction} close={setOpenReactions} />}\n\t\t\t</div>\n\t\t)\n\t);\n}\n\nconst mapDispatchToProps = {\n\ttoggleMsgPinnedStatus,\n\tremoveMsgFromChat,\n\taddReactionToMsg,\n};\n\nexport const MessagePopNavActions = connect(null, mapDispatchToProps)(_MessagePopNavActions);\n","import React, { useState } from 'react';\nimport './Message.scss';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport { UserPreviewPopup } from '../UserPreviewPopup/UserPreviewPopup';\nimport { MessagePopNavActions } from '../MessagePopNavActions/MessagePopNavActions';\nimport moment from 'moment';\nimport parse from 'html-react-parser';\n\nexport function Message({ msg, isPrivate, replay, isThread, shortNavForm }) {\n\tconst { sentBy, createdAt, messageTxt, avatarImg, userId } = msg;\n\tconst [showUserPopup, setShowUserPopup] = useState(null);\n\tconst [replyIsHoverd, setReplyIsHoverd] = useState(false);\n\tconst [isMsgHovered, setIsMsgHovered] = useState(false);\n\tconst [clickPos, setClickPos] = useState({ x: null, y: null });\n\n\tconst onNameClicked = (ev) => {\n\t\tvar { clientX, clientY } = ev;\n\t\tif (clientX + 300 > window.innerWidth) clientX = clientY - 300;\n\t\tif (clientY + 350 > window.innerHeight) clientY = clientY - 350;\n\t\tsetClickPos({ x: clientX, y: clientY });\n\t\tsetShowUserPopup(true);\n\t};\n\tconst repliesAvatars = () => {\n\t\tlet includedAvatars = [];\n\t\treturn msg.replies.reduce((avatars, reply) => {\n\t\t\tif (!includedAvatars.includes(reply.userId)) {\n\t\t\t\tincludedAvatars.push(reply.userId);\n\t\t\t\tavatars.push(reply);\n\t\t\t}\n\t\t\treturn avatars;\n\t\t}, []);\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName='msg-layout'\n\t\t\tonMouseEnter={() => setIsMsgHovered(true)}\n\t\t\tonMouseLeave={() => setIsMsgHovered(false)}\n\t\t>\n\t\t\t<section className='user-avatar flex justify-center'>\n\t\t\t\t<Avatar className='avatar' src={avatarImg} />\n\t\t\t</section>\n\t\t\t<section className='msg-body'>\n\t\t\t\t<section className='msg-details'>\n\t\t\t\t\t<span className='user-name' onClick={onNameClicked}>\n\t\t\t\t\t\t{sentBy}\n\t\t\t\t\t</span>\n\t\t\t\t\t{/* <span className='msg-created'>{new Date(createdAt).toLocaleTimeString()}</span> */}\n\t\t\t\t\t<span className='msg-created'>{moment(new Date(createdAt)).fromNow()}</span>\n\t\t\t\t</section>\n\t\t\t\t<section className='msg-content'>{parse(messageTxt)}</section>\n\t\t\t\t<section className='msg-reaction-container flex'>\n\t\t\t\t\t{Object.entries(msg.reactions).map(([reaction, count]) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<section className='reaction-item flex' key={reaction}>\n\t\t\t\t\t\t\t\t<span>{reaction}</span>\n\t\t\t\t\t\t\t\t<span>{count}</span>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t\t{!isThread && msg.replies.length > 0 && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<section className='replies-bar flex align-center' onClick={() => replay(msg.id)}>\n\t\t\t\t\t\t\t<AvatarGroup max={3} spacing='medium'>\n\t\t\t\t\t\t\t\t{repliesAvatars().map((memberReply) => (\n\t\t\t\t\t\t\t\t\t<Avatar className='custom-avatar' src={memberReply.avatarImg} key={memberReply.userId} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</AvatarGroup>\n\t\t\t\t\t\t\t<section className='reply-title-head'>\n\t\t\t\t\t\t\t\t{msg.replies.length === 1 ? '1 reply' : `${msg.replies.length} replies `}\n\t\t\t\t\t\t\t\t<span className='on-hover'> View Thread</span>\n\t\t\t\t\t\t\t\t<span className='not-hovered'>\n\t\t\t\t\t\t\t\t\t{` Last reply ${moment(new Date(msg.replies.slice(-1)[0].createdAt)).fromNow()}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<i className='far fa-angle-right' />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t\t{showUserPopup && <UserPreviewPopup userId={userId} close={setShowUserPopup} clickPos={clickPos} />}\n\t\t\t{isMsgHovered && (\n\t\t\t\t<MessagePopNavActions msg={msg} isPrivate={isPrivate} replay={replay} shortForm={shortNavForm} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React, { useRef, useState } from 'react';\nimport './TextMsgEditor.scss';\nimport { ReactionsList } from '../ReactionsList/ReactionsList';\n\nexport function TextMsgEditor({ handleChange, sendMessage, isReply }) {\n\tconst elTxtEditor = useRef(null);\n\tconst [reactionsPanelIsOpen, setReactionsPanelIsOpen] = useState(false);\n\tconst [cursorLocation, setCursorLocation] = useState(0);\n\tconst onSendMessage = async (ev) => {\n\t\tif (\n\t\t\tev.type !== 'click' &&\n\t\t\t(ev.key !== 'Enter' || (ev.key === 'Enter' && ev.shiftKey) || !elTxtEditor.current.innerText)\n\t\t)\n\t\t\treturn;\n\t\tawait sendMessage();\n\t\telTxtEditor.current.innerText = '';\n\t};\n\tconst formatData = () => {\n\t\tlet txt = elTxtEditor.current.innerText;\n\t\ttxt = txt.replace(/\\n+/g, '<br>');\n\t\thandleChange(txt);\n\t};\n\tconst addReaction = (emoji) => {\n\t\tconst { innerText: txt } = elTxtEditor.current;\n\t\telTxtEditor.current.innerText = txt.substring(0, cursorLocation) + emoji + txt.substring(cursorLocation);\n\t\thandleChange(elTxtEditor.current.innerText);\n\t};\n\treturn (\n\t\t<div className='editor-wrapper'>\n\t\t\t<div\n\t\t\t\tclassName='editable-text'\n\t\t\t\tonInput={formatData}\n\t\t\t\tonKeyPress={onSendMessage}\n\t\t\t\tonKeyDown={() => setCursorLocation(document.getSelection().anchorOffset)}\n\t\t\t\tonSelect={() => setCursorLocation(document.getSelection().anchorOffset)}\n\t\t\t\tref={elTxtEditor}\n\t\t\t\tcontentEditable='true'\n\t\t\t\tdata-placeholder={isReply ? 'Replay...' : 'Send New Message'}\n\t\t\t></div>\n\t\t\t<section className='new-msg-actions flex'>\n\t\t\t\t<i className='far fa-laugh-wink' onClick={() => setReactionsPanelIsOpen(!reactionsPanelIsOpen)} />\n\t\t\t\t<i className='fas fa-paperclip' />\n\t\t\t\t<i className='far fa-paper-plane' onClick={onSendMessage} />\n\t\t\t\t{reactionsPanelIsOpen && <ReactionsList addReaction={addReaction} close={setReactionsPanelIsOpen} />}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport './SendMessageBar.scss';\nimport { sendPublicMessage, sendPrivateMessage, addReplyToMsg } from '../../Actions/chatMessagesAction';\nimport { TextMsgEditor } from '../TextMsgEditor/TextMsgEditor';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { socketService } from '../../Services/socketService';\n\nexport class _SendMessageBar extends Component {\n\tstate = {\n\t\tmsgToSend: {\n\t\t\tmessageTxt: '',\n\t\t},\n\t\ttypingTimer: null,\n\t\t// elMsgEditor: React.createRef(),\n\t};\n\thandleChange = (messageTxt) => {\n\t\tthis.emitSocketEvents();\n\t\tthis.setState((state) => ({ ...state, msgToSend: { messageTxt } }));\n\t\t// console.log(target.innerText);\n\t\t// const messageTxt = msgTxt;\n\t\t// this.state.elMsgEditor.current.rows = target.value ? 1 + Math.floor(target.scrollHeight / 50) : 2;\n\t};\n\n\tonSendMessage = async () => {\n\t\tconst { chatType } = this.props;\n\t\tconst { nickName, avatarImg } = this.props.loggedUser.preferences;\n\t\tawait this.setState((state) => ({\n\t\t\t...state,\n\t\t\tmsgToSend: {\n\t\t\t\t...state.msgToSend,\n\t\t\t\tid: uuidv4(),\n\t\t\t\tcreatedAt: Date.now(),\n\t\t\t\tsentBy: nickName,\n\t\t\t\tavatarImg,\n\t\t\t\tuserId: this.props.loggedUser._id,\n\t\t\t\tisPinned: false,\n\t\t\t\treactions: {},\n\t\t\t\treplies: [],\n\t\t\t},\n\t\t}));\n\n\t\tawait this.sendMessage(chatType);\n\t\tthis.setState((state) => ({ ...state, msgToSend: { messageTxt: '' } }));\n\t};\n\tsendMessage = async (chatType) => {\n\t\tconst { _id } = this.props.chatData;\n\t\tconst { msgToSend } = this.state;\n\t\tconst { replyMsgId, isPrivate } = this.props;\n\t\tif (replyMsgId) await this.props.addReplyToMsg(replyMsgId, msgToSend, isPrivate);\n\t\telse if (chatType === 'direct') await this.props.sendPrivateMessage(msgToSend);\n\t\telse await this.props.sendPublicMessage(msgToSend);\n\t\tlet userId = this.props.loggedUser._id;\n\t\tsocketService.emit('chatUpdated', { chatType, _id, userId });\n\t};\n\temitSocketEvents = () => {\n\t\tif (this.state.typingTimer) clearTimeout(this.state.typingTimer);\n\t\tconst { _id } = this.props.chatData;\n\t\tconst userName = this.props.loggedUser.preferences.nickName;\n\t\tconst typingTimer = setTimeout(() => {\n\t\t\tsocketService.emit('userStoppedTyping', _id);\n\t\t}, 2000);\n\t\tthis.setState({ typingTimer });\n\t\tsocketService.emit('chatTyping', { _id, userName });\n\t};\n\trender() {\n\t\tconst { replyMsgId } = this.props;\n\t\treturn (\n\t\t\t<div className={'message-bar' + (replyMsgId ? '' : ' main-chat')}>\n\t\t\t\t<TextMsgEditor\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tsendMessage={this.onSendMessage}\n\t\t\t\t\tisReply={this.props.replyMsgId}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tloggedUser: state.userReducer,\n\t\tchatData: state.chatMessagesReducer,\n\t};\n};\n\nconst mapDispatchToProps = {\n\tsendPublicMessage,\n\tsendPrivateMessage,\n\taddReplyToMsg,\n};\n\nexport const SendMessageBar = connect(mapStateToProps, mapDispatchToProps)(_SendMessageBar);\n","import React from 'react';\nimport { PopupWindow } from '../GeneralStructure/PopupWindow/PopupWindow';\nimport { SelectMembers } from '../SelectMembers/SelectMembers';\nimport { connect } from 'react-redux';\nimport { addNewMembers } from '../../Actions/chatMessagesAction';\nimport { socketService } from '../../Services/socketService';\nfunction _AddMemberToChannel({ toggleState, addNewMembers, chatData }) {\n\tconst addUserToChannel = async (user) => {\n\t\tconst { _id, channelName } = chatData;\n\t\tsocketService.emit('addUserToChannel', { channel: { _id, channelName }, userId: user._id });\n\t\taddNewMembers(user);\n\t};\n\treturn (\n\t\t<PopupWindow close={toggleState} width='550px' height='300px' title='Add Member To Channel'>\n\t\t\t<section className='max-width flex col'>\n\t\t\t\t<SelectMembers\n\t\t\t\t\tcustomStyle='user-container-custom'\n\t\t\t\t\tshowJoinStatus={true}\n\t\t\t\t\twhenClicked={addUserToChannel}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</PopupWindow>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tchatData: state.chatMessagesReducer,\n});\n\nconst mapDispatchToProps = {\n\taddNewMembers,\n};\n\nexport const AddMemberToChannel = connect(mapStateToProps, mapDispatchToProps)(_AddMemberToChannel);\n","import React, { useState } from 'react';\nimport './ChannelMembersList.scss';\nimport { PopupWindow } from '../GeneralStructure/PopupWindow/PopupWindow';\nimport { InputBox } from '../GeneralStructure/InputBox/InputBox';\nimport { UserPreviewPopup } from '../UserPreviewPopup/UserPreviewPopup';\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport { removeMemberFromChannel } from '../../Actions/chatMessagesAction';\nimport { socketService } from '../../Services/socketService';\n\nexport function _ChannelMembersList({ close, chatData, remove, loggedUser }) {\n\tconst [filterBy, setFilterBy] = useState('');\n\tconst [clickedUserId, setUserId] = useState(null);\n\tconst [clickPos, setClickPos] = useState({ x: null, y: null });\n\n\tconst onNameClicked = (ev, userId) => {\n\t\tvar { clientX, clientY } = ev;\n\t\tif (clientX + 300 > window.innerWidth) clientX = clientX - 300;\n\t\tif (clientY + 350 > window.innerHeight) clientY = clientY - 350;\n\t\tsetClickPos({ x: clientX, y: clientY });\n\t\tsetUserId(userId);\n\t};\n\tconst popUpTitle = `${chatData.sharedUsers.length} members in ${chatData.channelName}`;\n\tconst handleChange = (value) => {\n\t\tsetFilterBy(value);\n\t};\n\tconst filteredMembers = () => {\n\t\treturn chatData.sharedUsers.filter((member) => member.nickName.toLowerCase().includes(filterBy));\n\t};\n\tconst removeMember = async (ev, member) => {\n\t\tev.stopPropagation();\n\t\tawait remove(member);\n\t\t// socketService.emit('chatUpdated', { chatType: 'channel', _id: chatData._id });\n\t\tsocketService.emit('removeUserFromChannel', { channelId: chatData._id, userId: member._id });\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<PopupWindow close={close} width='500px' height='600px' title={popUpTitle}>\n\t\t\t\t<InputBox\n\t\t\t\t\tvalue={filterBy}\n\t\t\t\t\thandler={handleChange}\n\t\t\t\t\tplaceholder='Search in channel members...'\n\t\t\t\t\twidth='450px'\n\t\t\t\t/>\n\t\t\t\t<ul className='channel-members-container clean-list'>\n\t\t\t\t\t{chatData &&\n\t\t\t\t\t\tfilteredMembers().map((member) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={member._id}\n\t\t\t\t\t\t\t\t\tclassName='flex align-center'\n\t\t\t\t\t\t\t\t\tonClick={(ev) => onNameClicked(ev, member._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Avatar variant='square' src={member.avatarImg} />\n\t\t\t\t\t\t\t\t\t<span>{member.nickName}</span>\n\t\t\t\t\t\t\t\t\t{member._id !== loggedUser._id && loggedUser._id === chatData.createdBy._id && (\n\t\t\t\t\t\t\t\t\t\t<button className='btn-remove' onClick={(ev) => removeMember(ev, member)}>\n\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t{clickedUserId && <UserPreviewPopup userId={clickedUserId} close={close} clickPos={clickPos} />}\n\t\t\t</PopupWindow>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tchatData: state.chatMessagesReducer,\n\tloggedUser: state.userReducer,\n});\n\nconst mapDispatchToProps = {\n\tremove: removeMemberFromChannel,\n};\nexport const ChannelMembersList = connect(mapStateToProps, mapDispatchToProps)(_ChannelMembersList);\n","import React, { useState } from 'react';\nimport './ChatTopBar.scss';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport { AddMemberToChannel } from '../AddMemberToChannel/AddMemberToChannel';\nimport { ChannelMembersList } from '../ChannelMembersList/ChannelMembersList';\n\nexport function ChatTopBar({ name, toggleDetails, channelMembers,toggleNavBar }) {\n\tconst [addMemberWindowState, setAddMemberWindowState] = useState(false);\n\tconst [channelMembersWindow, setChannelMembersWindow] = useState(false);\n\treturn (\n\t\t<div className='channel-bar flex'>\n\t\t\t<i className=\"far fa-newspaper nav-toggle-btn\" onClick={()=>toggleNavBar(true)}></i>\n\t\t\t<section className='left-side'>\n\t\t\t\t<span>\n\t\t\t\t\t#{name}\n\t\t\t\t\t<i className='far fa-star' />\n\t\t\t\t</span>\n\t\t\t\t<span>Add a Topic</span>\n\t\t\t</section>\n\t\t\t<section className='right-side flex'>\n\t\t\t\t<section className='members-avatars' onClick={() => setChannelMembersWindow(true)}>\n\t\t\t\t\t<AvatarGroup max={3} spacing='medium'>\n\t\t\t\t\t\t{channelMembers &&\n\t\t\t\t\t\t\tchannelMembers.map((member) => <Avatar src={member.avatarImg} key={member._id} />)}\n\t\t\t\t\t</AvatarGroup>\n\t\t\t\t</section>\n\t\t\t\t{channelMembers && <i className='far fa-user-plus' onClick={() => setAddMemberWindowState(true)} />}\n\t\t\t\t<i className='fal fa-info-circle' onClick={toggleDetails} />\n\t\t\t</section>\n\t\t\t{addMemberWindowState && <AddMemberToChannel toggleState={setAddMemberWindowState} />}\n\t\t\t{channelMembersWindow && <ChannelMembersList close={setChannelMembersWindow} />}\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport './UserTypingBox.scss';\nimport { socketService } from '../../Services/socketService';\n\nexport function UserTypingBox() {\n\tconst [currTypingUser, setCurrTypingUser] = useState(null);\n\tuseEffect(() => {\n\t\tsocketService.on('userIsTyping', ({ userName }) => {\n\t\t\tsetCurrTypingUser(userName);\n\t\t});\n\t\tsocketService.on('noTypingInChat', () => {\n\t\t\tsetCurrTypingUser(null);\n\t\t});\n\t}, []);\n\treturn <div className='typing-box-indication'>{currTypingUser && <span> {currTypingUser} is Typing...</span>}</div>;\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport './SideChatNavItem.scss';\n\nexport function SideChatNavItem({ name, children, counter }) {\n\tconst [itemIsOpen, setItemIsOpen] = useState(false);\n\treturn (\n\t\t<div className='chat-nav-item'>\n\t\t\t<header className='header-item-name flex space-between' onClick={() => setItemIsOpen(!itemIsOpen)}>\n\t\t\t\t<span>{name}</span>\n\t\t\t\t{counter >= 0 && <span className='item-counter'>{counter}</span>}\n\t\t\t\t<i className={'fas fa-caret-' + (itemIsOpen ? 'down' : 'right')} />\n\t\t\t</header>\n\t\t\t{itemIsOpen && <section className='item-content'>{children}</section>}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './SideChatAboutChannel.scss';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport function SideChatAboutChannel({ chatData }) {\n\treturn (\n\t\tchatData && (\n\t\t\t<div className='about-chat'>\n\t\t\t\t<section className='sub-item'>\n\t\t\t\t\t<span className='title'>Topic</span>\n\t\t\t\t\t<span>this chat topic is...</span>\n\t\t\t\t</section>\n\t\t\t\t<section className='sub-item'>\n\t\t\t\t\t<span className='title'>Description</span>\n\t\t\t\t\t<span>{chatData.channelDesc}</span>\n\t\t\t\t</section>\n\t\t\t\t<section className='sub-item'>\n\t\t\t\t\t<span className='title'>Created by</span>\n\t\t\t\t\t<span className='created flex align-center'>\n\t\t\t\t\t\t<Avatar variant='square' src={chatData.createdBy.avatarImg} />\n\t\t\t\t\t\t{chatData.createdBy.nickName + ', at ' + new Date(chatData.createdAt).toLocaleDateString()}\n\t\t\t\t\t</span>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t)\n\t);\n}\n","import React from 'react';\nimport './SideChatAboutUser.scss';\n\nexport function SideChatAboutUser({ chatData }) {\n\tconsole.log(chatData);\n\treturn (\n\t\t<div className='about-chat'>\n\t\t\t<section className='sub-item  '>\n\t\t\t\t<span className='title'>Display Name</span>\n\t\t\t\t<span>{chatData.directMsgName}</span>\n\t\t\t</section>\n\t\t\t<section className='sub-item '>\n\t\t\t\t<span className='title'>Local Time</span>\n\t\t\t\t<span>{new Date().toLocaleTimeString()}</span>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport './SideChatMembersList.scss';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useSelector } from 'react-redux';\nimport { UserPreviewPopup } from '../UserPreviewPopup/UserPreviewPopup';\n\nexport function SideChatMembersList() {\n\tconst { sharedUsers } = useSelector((state) => state.chatMessagesReducer);\n\tconst [clickedUser, setClickedUser] = useState(null);\n\tconst [clickPos, setClickPos] = useState({ x: null, y: null });\n\n\tconst onNameClicked = (ev, userId) => {\n\t\tvar { clientX, clientY } = ev;\n\t\tif (clientX + 300 > window.innerWidth) clientX = clientY - 300;\n\t\tif (clientY + 350 > window.innerHeight) clientY = clientY - 350;\n\t\tsetClickPos({ x: clientX, y: clientY });\n\t\tsetClickedUser(userId);\n\t};\n\n\treturn (\n\t\t<div className='members-list flex col'>\n\t\t\t<ul className='members-container clean-list'>\n\t\t\t\t{sharedUsers &&\n\t\t\t\t\tsharedUsers.map((member) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={member._id}\n\t\t\t\t\t\t\t\tclassName='flex align-center'\n\t\t\t\t\t\t\t\tonClick={(ev) => onNameClicked(ev, member._id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Avatar variant='square' src={member.avatarImg} />\n\t\t\t\t\t\t\t\t<span>{member.nickName}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t{clickedUser && <UserPreviewPopup userId={clickedUser} close={setClickedUser} clickPos={clickPos} />}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './SideChatPinnedItems.scss';\nimport Avatar from '@material-ui/core/Avatar';\nimport { toggleMsgPinnedStatus } from '../../Actions/chatMessagesAction';\nimport { connect } from 'react-redux';\n\nfunction _SideChatPinnedItems({ items, toggleMsgPinnedStatus }) {\n\tif (items.length <= 0) {\n\t\treturn (\n\t\t\t<h4 className=\"no-pinned-items\">\n\t\t\t\tNo items have been pinned yet! Open\n\t\t\t\t the context menu on important messages or files and choose Pin to\n\t\t\t\tthis conversation to stick them here.\n\t\t\t</h4>\n\t\t);\n\t}\n\treturn (\n\t\t<div className='pinned-items-container'>\n\t\t\t{items.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<section className='pinned-item flex col justify-center' key={item.id}>\n\t\t\t\t\t\t<header className='flex'>\n\t\t\t\t\t\t\t<Avatar className='custom-avatar' src={item.avatarImg} />\n\t\t\t\t\t\t\t<span>{item.sentBy}</span>\n\t\t\t\t\t\t\t<i className='fas fa-plus' onClick={() => toggleMsgPinnedStatus(item.id)} />\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<section className='item-content'>{item.messageTxt}</section>\n\t\t\t\t\t\t<section className='item-comments flex'>\n\t\t\t\t\t\t\t<section className='reactions'>\n\t\t\t\t\t\t\t\t{Object.keys(item.reactions).slice(0, 2)}\n\t\t\t\t\t\t\t\t{Object.keys(item.reactions).length} reactions\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section className='item-creation'>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{new Date(item.createdAt).toLocaleDateString()} at{' '}\n\t\t\t\t\t\t\t\t{new Date(item.createdAt).toLocaleTimeString()} |\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>View message</span>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</section>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = {\n\ttoggleMsgPinnedStatus,\n};\n\nexport const SideChatPinnedItems = connect(null, mapDispatchToProps)(_SideChatPinnedItems);\n","import React, { useState } from 'react';\nimport './ChatSideNav.scss';\nimport { SideChatNavItem } from '../SideChatNavItem/SideChatNavItem';\nimport { SideChatAboutChannel } from '../SideChatAboutChannel/SideChatAboutChannel';\nimport { SideChatAboutUser } from '../SideChatAboutUser/SideChatAboutUser';\nimport { SideChatMembersList } from '../SideChatMembersList/SideChatMembersList';\nimport { SideChatPinnedItems } from '../SideChatPinnedItems/SideChatPinnedItems';\nimport { AddMemberToChannel } from '../AddMemberToChannel/AddMemberToChannel';\nimport { removeChannel } from '../../Actions/chatMessagesAction';\nimport { removePrivateMessage } from '../../Actions/userAction';\nimport { connect } from 'react-redux';\n\nfunction _ChatSideNav({ chatName, closeSideNav, chatType, removeChannel, removePrivateMessage, chatData }) {\n\tconst [addMemberWindowState, setAddMemberWindowState] = useState(false);\n\tconst chatPreviewImage = chatType === 'channel' ? chatData.channelThumbnail : chatData.avatarImg;\n\tconst pinnedItems = chatData.messages.filter((item) => item.isPinned);\n\tconst removeItem = async () => {\n\t\tconst { _id } = chatData;\n\t\tif (chatType === 'channel') await removeChannel(_id);\n\t\telse await removePrivateMessage(_id);\n\t};\n\treturn (\n\t\t<div className='chat-side-details flex col'>\n\t\t\t<header className='main-nav-header flex space-between'>\n\t\t\t\t<section className='side-nav-chatname flex col'>\n\t\t\t\t\t<span className='header-main-title bold'>Details</span>\n\t\t\t\t\t<span className='header-sub-title'>{chatName}</span>\n\t\t\t\t</section>\n\t\t\t\t<i className='fas fa-plus' onClick={() => closeSideNav(false)} />\n\t\t\t</header>\n\t\t\t<section className='chat-thumbnail flex-center'>\n\t\t\t\t<img src={chatPreviewImage} alt='' />\n\t\t\t</section>\n\t\t\t<section className='actions-container flex-center'>\n\t\t\t\t{chatType === 'channel' && (\n\t\t\t\t\t<section className='action-item flex-center col'>\n\t\t\t\t\t\t<i className='far fa-user-plus' onClick={() => setAddMemberWindowState(true)} />\n\t\t\t\t\t\t<span>Add</span>\n\t\t\t\t\t</section>\n\t\t\t\t)}\n\t\t\t\t<section className='action-item flex-center col' onClick={removeItem}>\n\t\t\t\t\t<i className='fas fa-trash-alt'></i>\n\t\t\t\t\t<span>Delete</span>\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t\t{chatData && (\n\t\t\t\t<section className='items-container'>\n\t\t\t\t\t<SideChatNavItem name='About'>\n\t\t\t\t\t\t{chatType === 'channel' ? (\n\t\t\t\t\t\t\t<SideChatAboutChannel chatData={chatData} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<SideChatAboutUser chatData={chatData} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</SideChatNavItem>\n\t\t\t\t\t{chatData.sharedUsers && (\n\t\t\t\t\t\t// THIS WILL NOT SHOW IN THE PRIVATE MESSAGE SIDENAV\n\t\t\t\t\t\t<SideChatNavItem name='Members' counter={chatData.sharedUsers.length}>\n\t\t\t\t\t\t\t<SideChatMembersList />\n\t\t\t\t\t\t</SideChatNavItem>\n\t\t\t\t\t)}\n\t\t\t\t\t<SideChatNavItem name='Pinned' counter={pinnedItems.length}>\n\t\t\t\t\t\t<SideChatPinnedItems items={pinnedItems} />\n\t\t\t\t\t</SideChatNavItem>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t\t{addMemberWindowState && <AddMemberToChannel toggleState={setAddMemberWindowState} />}\n\t\t</div>\n\t);\n}\n\nconst mapDispatchToProps = {\n\tremoveChannel,\n\tremovePrivateMessage,\n};\n\nexport const ChatSideNav = connect(null, mapDispatchToProps)(_ChatSideNav);\n","import React from 'react';\nimport './ChatFirstMsg.scss';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport function ChatFirstMsg({ type, data }) {\n\tconst name = type === 'channel' ? data.channelName : data.directMsgName;\n\treturn (\n\t\t<div className='first-msg-container'>\n\t\t\t<section className='info flex align-center'>\n\t\t\t\t{type === 'channel' ? (\n\t\t\t\t\t<img className='channel-pic' src={data.channelThumbnail} />\n\t\t\t\t) : (\n\t\t\t\t\t<Avatar className='custom-avatar' variant='square' src={data.avatarImg} />\n\t\t\t\t)}\n\t\t\t\t<span>{name}</span>\n\t\t\t</section>\n\t\t\t<section className='msg-txt'>\n\t\t\t\tThis is the very beginning of your direct message history with\n\t\t\t\t<span> @{name}</span>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n","import React, { useContext } from 'react';\nimport './UserFullProfileSideMenu.scss';\nimport { addPMToUser } from '../../Actions/userAction';\nimport { ChatContext } from '../../ParrotApp';\nimport { connect } from 'react-redux';\n\nfunction _UserFullProfileSideMenu({ userToShow, closeProfile, addPMToUser, userData }) {\n\tconst createdDirectMsgs = userData.directMessages;\n\tconst { updateChatToRender } = useContext(ChatContext);\n\tconst addNewPMChat = async () => {\n\t\tconst { _id, userName, avatarImg } = userToShow;\n\t\tif (!createdDirectMsgs.some((user) => user._id === _id)) {\n\t\t\tconst newPMData = { type: 'direct', _id, directMsgName: userName, avatarImg, messages: [] };\n\t\t\tawait addPMToUser(newPMData);\n\t\t}\n\t\tupdateChatToRender({ type: 'direct', _id });\n\t};\n\treturn (\n\t\t<div className='full-user-profile flex col'>\n\t\t\t<header className='main-nav-header flex space-between'>\n\t\t\t\t<span className='header-main-title bold'>Profile</span>\n\t\t\t\t<i className='fas fa-plus' onClick={() => closeProfile(null)} />\n\t\t\t</header>\n\t\t\t<section className='user-main-detials flex col'>\n\t\t\t\t<section className='user-profile-img-wrapper flex-center'>\n\t\t\t\t\t<img src={userToShow.avatarImg} alt='profile-pic' />\n\t\t\t\t</section>\n\t\t\t\t<span className='bold'>{userToShow.userName}</span>\n\t\t\t</section>\n\t\t\t<section className='user-actions flex-center'>\n\t\t\t\t<section className='action-item flex-center col' onClick={addNewPMChat}>\n\t\t\t\t\t<i className='far fa-comment-dots'></i>\n\t\t\t\t\t<span>Message</span>\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t\t<section className='user-raw-details flex col '>\n\t\t\t\t<span className='detail-title'>Display Name:</span>\n\t\t\t\t<span className='user-display-name'>{userToShow.nickName}</span>\n\t\t\t\t<span className='detail-title'>Local Time</span>\n\t\t\t\t<span className='user-local-time'>{new Date().toLocaleTimeString()}</span>\n\t\t\t\t{/* <span className='detail-title'>Email address</span> */}\n\t\t\t\t{/* <span className='user-email'>{userToShow.email} </span> */}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => ({\n\tuserData: state.userReducer,\n});\n\nconst mapDispatchToProps = {\n\taddPMToUser,\n};\n\nexport const UserFullProfileSideMenu = connect(mapStateToProps, mapDispatchToProps)(_UserFullProfileSideMenu);\n","import React, { useEffect, useState } from 'react';\nimport './SideMessageThread.scss';\nimport { Message } from '../Message/Message';\nimport { SendMessageBar } from '../SendMessageBar/SendMessageBar';\nimport { useSelector } from 'react-redux';\n\nexport function SideMessageThread({ msgId, closeThread, chatType, name }) {\n\tconst [isPrivate, setIsPrivate] = useState(false);\n\tconst msg = useSelector((state) => {\n\t\treturn state.chatMessagesReducer.messages.find((msg) => msg.id === msgId);\n\t});\n\tuseEffect(() => {\n\t\tif (msg.type === 'direct') setIsPrivate(true);\n\t}, [msg]);\n\n\treturn (\n\t\tmsg && (\n\t\t\t<div className='side-messege-thread'>\n\t\t\t\t<header className='thread-header flex space-between'>\n\t\t\t\t\t<section className='side-nav-chatname flex col'>\n\t\t\t\t\t\t<span className='header-main-title bold'>Thread</span>\n\t\t\t\t\t\t<span className='header-sub-title'>{name}</span>\n\t\t\t\t\t</section>\n\t\t\t\t\t<i className='fas fa-plus' onClick={() => closeThread(null)} />\n\t\t\t\t</header>\n\t\t\t\t<div className='replies-container flex col'>\n\t\t\t\t\t<section className='replyed-msg'>\n\t\t\t\t\t\t<Message msg={msg} isThread='true' shortNavForm='true' />\n\t\t\t\t\t</section>\n\t\t\t\t\t{msg.replies.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='replies-bar-wrapper flex'>\n\t\t\t\t\t\t\t\t<h6>{msg.replies.length === 1 ? '1 reply' : `${msg.replies.length} replies`}</h6>\n\t\t\t\t\t\t\t\t<span className='divider'></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<section className='replies'>\n\t\t\t\t\t\t\t\t{msg.replies.map((reply) => {\n\t\t\t\t\t\t\t\t\treturn <Message msg={reply} key={reply.id} shortNavForm='true' />;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t<SendMessageBar replyMsgId={msg.id} isPrivate={isPrivate} chatType={chatType} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t);\n}\n","import React, { useEffect, useState, useRef, useContext } from 'react';\nimport './Chat.scss';\nimport { Message } from '../../Components/Message/Message';\nimport { SendMessageBar } from '../../Components/SendMessageBar/SendMessageBar';\nimport { ChatTopBar } from '../../Components/ChatTopBar/ChatTopBar';\nimport { UserTypingBox } from '../../Components/UserTypingBox/UserTypingBox';\nimport { ChatSideNav } from '../../Components/ChatSideNav/ChatSideNav';\nimport { ChatFirstMsg } from '../../Components/ChatFirstMsg/ChatFirstMsg';\nimport { UserFullProfileSideMenu } from '../../Components/UserFullProfileSideMenu/UserFullProfileSideMenu';\nimport { SideMessageThread } from '../../Components/SideMessageThread/SideMessageThread';\nimport { useSelector } from 'react-redux';\nimport { ChatContext } from '../../ParrotApp';\nexport const FullProfileContext = React.createContext(null);\n\nexport function Chat({ navIsOpen }) {\n\tconst messagesContainerEl = useRef(null);\n\tconst chatData = useSelector((state) => state.chatMessagesReducer);\n\tconst [chatType, setChatType] = useState(null);\n\tconst [detailsSideNavOpen, setDetailsSideNavOpen] = useState(false);\n\tconst [sideThreadMsg, setSideThreadMsg] = useState(null);\n\tconst [fullProfileToShow, setFullProfile] = useState(null);\n\tconst { setOpenSideNavOnMobile } = useContext(ChatContext);\n\n\tuseEffect(() => {\n\t\tsetTimeout(setContainerScroll, 100); //TODO BETTER WAY?\n\t\tlet type = chatData && chatData.channelName ? 'channel' : 'direct';\n\t\tsetChatType(type);\n\t}, [chatData]);\n\n\tconst setContainerScroll = () => {\n\t\tif (!messagesContainerEl.current) return;\n\t\tmessagesContainerEl.current.scrollTop = messagesContainerEl.current.scrollHeight;\n\t};\n\n\tconst toggleDetailsNav = () => {\n\t\tsetDetailsSideNavOpen(!detailsSideNavOpen);\n\t\tif (!detailsSideNavOpen) setFullProfile(null);\n\t};\n\treturn (\n\t\tchatData && (\n\t\t\t<FullProfileContext.Provider value={setFullProfile}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'main-view' + (detailsSideNavOpen || fullProfileToShow || sideThreadMsg ? ' side-nav-open' : '')\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{navIsOpen && <section className='close-mobile' onClick={() => setOpenSideNavOnMobile(false)} />}\n\n\t\t\t\t\t<ChatTopBar\n\t\t\t\t\t\tname={chatData.channelName || chatData.directMsgName}\n\t\t\t\t\t\ttoggleDetails={toggleDetailsNav}\n\t\t\t\t\t\tchannelMembers={chatData.sharedUsers}\n\t\t\t\t\t\ttoggleNavBar={setOpenSideNavOnMobile}\n\t\t\t\t\t/>\n\t\t\t\t\t<section ref={messagesContainerEl} className='messages-container'>\n\t\t\t\t\t\t<ChatFirstMsg data={chatData} type={chatType} />\n\t\t\t\t\t\t{/* {chatData.messages.length <= 0 && <NoMessagesToShow />} */}\n\t\t\t\t\t\t{chatData.messages.map((msg) => (\n\t\t\t\t\t\t\t<Message key={msg.id} msg={msg} isPrivate={chatType === 'direct'} replay={setSideThreadMsg} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</section>\n\t\t\t\t\t{detailsSideNavOpen && (\n\t\t\t\t\t\t<ChatSideNav\n\t\t\t\t\t\t\tcloseSideNav={toggleDetailsNav}\n\t\t\t\t\t\t\tchatName={chatData.channelName || chatData.directMsgName}\n\t\t\t\t\t\t\tchatType={chatType}\n\t\t\t\t\t\t\tchatData={chatData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{fullProfileToShow && (\n\t\t\t\t\t\t<UserFullProfileSideMenu userToShow={fullProfileToShow} closeProfile={setFullProfile} />\n\t\t\t\t\t)}\n\t\t\t\t\t{sideThreadMsg && (\n\t\t\t\t\t\t<SideMessageThread msgId={sideThreadMsg} closeThread={setSideThreadMsg} chatType={chatType} name={chatData.channelName || chatData.directMsgName} />\n\t\t\t\t\t)}\n\t\t\t\t\t<SendMessageBar chatType={chatType} />\n\t\t\t\t\t<UserTypingBox />\n\t\t\t\t</div>\n\t\t\t</FullProfileContext.Provider>\n\t\t)\n\t);\n}\n","import React from 'react';\nimport './LoadingScreen.scss';\nimport { CircularProgress } from '@material-ui/core';\n\nexport function LoadingScreen() {\n\treturn (\n\t\t<div className=\"loading-screen\">\n\t\t\t<CircularProgress/>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport { socketService } from './Services/socketService';\nimport { getChatData, updateChatData } from './Actions/chatMessagesAction';\nimport { setWorkSpaceData, updateUsersStatus } from './Actions/workSpaceAction';\nimport { checkForLoggedUser, updateUserData } from './Actions/userAction';\nimport { AppHeader } from './Components/AppHeader/AppHeader';\nimport { SideNav } from './Components/SideNav/SideNav';\nimport { Chat } from './Pages/Chat/Chat';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { LoadingScreen } from './Components/LoadingScreen/LoadingScreen';\n\nexport const ChatContext = React.createContext(null);\n\nfunction ParrotApp({\n\tgetChatData,\n\tupdateChatData,\n\tsetWorkSpaceData,\n\tworkSpace,\n\tcheckForLoggedUser,\n\tuserData,\n\tupdateUsersStatus,\n\tupdateUserData,\n}) {\n\tconst { isAuth } = userData;\n\tconst [lastChatId, setLastChatId] = useState(null);\n\tconst [openSideNavOnMobile, setOpenSideNavOnMobile] = useState(false);\n\n\tuseEffect(() => {\n\t\tcheckForLoggedUser();\n\t\t//todo: check if this is right. for the first time ...\n\t\tsetWorkSpaceData('5fa1366f47b949c890bbedd6');\n\t\tsocketService.emit('newUserLoggedToWorkspace', '5fa1366f47b949c890bbedd6', userData._id);\n\t\tsocketService.on('newMessagesOnChat', async ({ lastUpdatedData }) => {\n\t\t\tconsole.log('updataed ! ', lastUpdatedData);\n\t\t\tawait updateChatData(lastUpdatedData);\n\t\t});\n\t\tsocketService.on('workSpaceUpdate', async (onlineUsers) => {\n\t\t\tawait setWorkSpaceData('5fa1366f47b949c890bbedd6');\n\t\t\tawait updateUsersStatus(onlineUsers);\n\t\t});\n\t\tsocketService.on('userDataUpdate', async (userData) => {\n\t\t\tawait updateUserData(userData);\n\t\t});\n\t}, [isAuth]);\n\n\tconst updateChatToRender = async (chatData) => {\n\t\tawait getChatData(chatData);\n\t\t//TODO: MAYBE PUT IT IN THE DROPDOWN DIRECTLY\n\t\t//BECAUSE Chat Is subscribing to the store\n\t\tif (lastChatId) socketService.emit('disconnectedFromChat', lastChatId);\n\t\tsocketService.emit('connectToChat', chatData, (serverChatId) => {\n\t\t\tsetLastChatId(serverChatId);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='App main-layout'>\n\t\t\t{isAuth === true && workSpace && (\n\t\t\t\t<>\n\t\t\t\t\t<AppHeader />\n\t\t\t\t\t<ChatContext.Provider value={{ updateChatToRender, setOpenSideNavOnMobile }}>\n\t\t\t\t\t\t<SideNav workSpace={workSpace} isOpenOnMobile={openSideNavOnMobile} />\n\t\t\t\t\t\t<Chat navIsOpen={openSideNavOnMobile} />\n\t\t\t\t\t</ChatContext.Provider>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{isAuth === 'Verifying' && <LoadingScreen />}\n\t\t\t{!isAuth && <Redirect to='/login' />}\n\t\t</div>\n\t);\n}\nconst mapStateToProps = (state) => ({\n\tworkSpace: state.workSpaceReducer,\n\tuserData: state.userReducer,\n});\n\nconst mapDispatchToProps = {\n\tgetChatData,\n\tupdateChatData,\n\tsetWorkSpaceData,\n\tcheckForLoggedUser,\n\tupdateUsersStatus,\n\tupdateUserData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParrotApp);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { LoginPage } from './Pages/LoginPage/LoginPage';\nimport { NotFoundPage } from './Pages/NotFoundPage/NotFoundPage';\nimport ParrotApp from './ParrotApp';\n\nexport const App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/' component={ParrotApp} />\n\t\t\t\t<Route exact path='/login' component={LoginPage} />\n\t\t\t\t<Route path='/404' component={NotFoundPage} />\n\t\t\t\t<Redirect to='/404' />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store.js';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}